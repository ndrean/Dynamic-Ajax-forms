function onDragStart(e) {
    // Add the target element's id to the data transfer object
    e.dataTransfer.setData("text/HTML", e.target.outerHTML);
  }

  // to stop the  browser from preventing our drop
  function onDragOver(e) {
    e.preventDefault();
    e.dataTransfer.dropEffect = "move";
  }

  function onDrop(e) {
    const data = e.dataTransfer.getData("text/HTML");
    //   const draggableElement = document.getElementById(data);
    //   const dropzone = e.target;
    //   dropzone.appendChild(draggableElement);
    //   e.dataTRansfer.clearData();
  }

  document.querySelector('#main').insertAdjacentHTML(
    'afterbegin',
    `
    <div class="col-md-12">
            <table>
                <thead>
                    <tr>
                        <td>Type</td>
                        <td>Restaurants</td>
                    </tr>
                </thead>
                <tbody id="tb-genres">
                  <% @genres.each do |genre| %>  
                    <tr data-genre-id="<%= genre.id %>">
                        <td><%= genre.name %></td>
                        <td class="d-flex border drop-zone">
                            <% genre.restos.each do |r| %>
                                <span tabindex="0" draggable="true" id= "resto_<%=r.id%>" class="genre_tag flex-wrap" data-resto-id="<%= r.id %>">
                                    <%=r.name %>
                                </span>
                            <% end %>
                          </td>
                      </tr>  
                  <% end %> 
                </tbody>
            </table>
        </div>
    `
  )

 document.addEventListener("dragstart", (e)=> {
    // The dataTransfer.setData() method sets the data type and the value of the dragged data
    e.dataTransfer.setData("Text", e.target.id);
    console.log("Started to drag the p element.")
    const id = e.target.dataset.restoId;
    const restoName = e.target.innerText;
    console.log(id, restoName);
    document.querySelector(`option[value='${id}']`).selected = true;
  });

document.addEventListener("dragend", ()=>  {
    console.log("Finished dragging the p element.")
  });

/* By default, data/elements cannot be dropped in other elements. 
To allow a drop, we must prevent the default handling of the element */
document.addEventListener("dragover", (e)=>  { e.preventDefault(); });

/* On drop - Prevent the browser default handling of the data (default is open as link on drop)
Get the dragged data with the dataTransfer.getData() method
The dragged data is the id of the dragged element ("drag1")
Append the dragged element into the drop element */
document.addEventListener("drop", (e)=> {
  e.preventDefault();
  if (e.target.className === "drop-zone") {
    const data = e.dataTransfer.getData("Text");
    console.log(e.target, "data:",data, "dgebid :",document.getElementById(data))
    e.target.appendChild(document.getElementById(data));
    e.dataTransfer.clearData()
  }
});